{
  "rules": {
    "leaderboard": {
      "$uid": {
        "played": {
          ".validate": "newData.isNumber() && newData.val() > -1"
        },
        "won": {
          ".validate": "newData.isNumber() && newData.val() > -1"
        },
        "drawn": {
          ".validate": "newData.isNumber() && newData.val() > -1"
        },
        "lost": {
          ".validate": "newData.isNumber() && newData.val() > -1"
        },
        "points": {
          ".validate": "newData.isNumber() && newData.val() > -1"
        }
      },
      ".read": "true"
    },
    "matches": {
      "$uid": {
        "team_a": {
          "first": {
            ".validate": "newData.isString() && newData.val().length > 0"
          },
          "second": {
            ".validate": "newData.isString() && newData.val().length > 0"
          },
          "score": {
            ".validate": "newData.isNumber() && newData.val() > -1"
          },
          ".validate": "newData.hasChildren(['first','second', 'score'])"
        },
        "team_b": {
          "first": {
            ".validate": "newData.isString() && newData.val().length > 0"
          },
          "second": {
            ".validate": "newData.isString() && newData.val().length > 0"
          },
          "score": {
            ".validate": "newData.isNumber() && newData.val() > -1"
          },
          ".validate": "newData.hasChildren(['first','second', 'score'])"
        },
        "timestamp": {
          ".validate": "newData.isNumber() && newData.val() > 0"
        },
        ".validate": "newData.hasChildren(['team_a','team_b','timestamp']) &&
          newData.child('team_a').child('first').val() != newData.child('team_a').child('second').val() &&
          newData.child('team_a').child('first').val() != newData.child('team_b').child('first').val() &&
          newData.child('team_a').child('first').val() != newData.child('team_b').child('second').val() &&
          newData.child('team_a').child('first').val() != newData.child('team_a').child('second').val() &&
          newData.child('team_a').child('second').val() != newData.child('team_b').child('first').val() &&
          newData.child('team_a').child('second').val() != newData.child('team_b').child('second').val() &&
          newData.child('team_b').child('first').val() != newData.child('team_b').child('second').val()"
      },
      ".indexOn": "timestamp",
      ".read": "true"
    },
    "players": {
      "$uid": {
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        ".validate": "newData.hasChildren(['name'])"
      },
      ".read": "true"
    },
    ".read": "auth != null && auth.token != null && auth.token.admin === true",
    ".write": "auth != null && auth.token != null && auth.token.admin === true"
  }
}
